{"version":3,"file":"ngx-month-year-selector.js.map","sources":["ng://ngx-month-year-selector/lib/components/dropdown/year/year.component.ts","ng://ngx-month-year-selector/lib/lang/en.lang.ts","ng://ngx-month-year-selector/lib/components/dropdown/month/month.component.ts","ng://ngx-month-year-selector/lib/NGXMonthYear.ts","ng://ngx-month-year-selector/lib/components/dropdown/dropdown.component.ts","ng://ngx-month-year-selector/lib/monthyearselector.directive.ts","ng://ngx-month-year-selector/lib/ngx-month-year-selector.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { IMonthYearSelectorOptions } from '../../../models/IMonthYearSelectorOptions';\n\n@Component({\n  selector: 'lib-year',\n  templateUrl: './year.component.html',\n  styleUrls: ['./year.component.sass']\n})\nexport class YearComponent implements OnInit, OnDestroy {\n  @Input() options: IMonthYearSelectorOptions;\n  @Input()\n  set year(change: number) {\n    this._year = change;\n    this.yearChange.emit(change);\n  }\n  get year() {\n    return this._year;\n  }\n  @Output() yearChange = new EventEmitter();\n  @ViewChild('yearEditInput') yearEditInput: ElementRef;\n  yearEdit: number;\n  yearEditState: boolean = false;\n  _year: number;\n\n  constructor() {}\n\n  // Init\n  ngOnInit() {}\n\n  // Year back click event\n  yearBack(): void {\n    this.year--;\n    this.yearChange.emit(this.year);\n  }\n\n  // Year forward click event\n  yearForward(): void {\n    console.log('this.options', this.options);\n    this.year++;\n    this.yearChange.emit(this.year);\n  }\n\n  // Year label click event\n  yearClick() {\n    setTimeout(() => {\n      this.yearEdit = this.year;\n      this.yearEditState = true; // enable edit state\n      setTimeout(() => this.yearEditInput.nativeElement.focus(), 0); // set focus to input\n    });\n  }\n\n  // Year edit input keypress event\n  yearKeyPress(e: KeyboardEvent) {\n    // Blur year input on Enter key press\n    if (e.keyCode === 13) {\n      this.yearEditInput.nativeElement.blur();\n    }\n  }\n\n  // Year edit input blur event\n  yearBlur() {\n    console.log('yearBlur', this.yearEditValid());\n    this.year = this.yearEditValid() ? this.yearEdit : this.year;\n    this.yearEditState = false;\n    console.log('yearBLur', this.year);\n  }\n\n  // Year input valid state\n  yearEditValid(): boolean {\n    const yearMinValid = this.options.yearMin ? this.yearEdit >= this.options.yearMin : true;\n    const yearMaxValid = this.options.yearMax ? this.yearEdit <= this.options.yearMax : true;\n    return !isNaN(this.yearEdit) && yearMinValid && yearMaxValid;\n  }\n\n  ngOnDestroy() {\n    console.log('ngOnDestroy', this.yearEditState, this.yearEditValid());\n    if (this.yearEditState && this.yearEditValid()) {\n      this.year = this.yearEdit;\n    }\n  }\n\n}\n","export const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nexport const monthAbbrv = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IMonthYearSelectorDate } from '../../../models/IMonthYearSelectorDate';\nimport { IMonthYearSelectorOptions } from '../../../models/IMonthYearSelectorOptions';\nimport { monthAbbrv } from '../../../lang/en.lang';\n\n@Component({\n  selector: 'lib-month',\n  templateUrl: './month.component.html',\n  styleUrls: ['./month.component.sass']\n})\nexport class MonthComponent implements OnInit {\n  @Input() options: IMonthYearSelectorOptions;\n  @Input() dateSelected: IMonthYearSelectorDate;\n  @Input() year: number;\n  @Input() month: number;\n  @Output() monthChange = new EventEmitter();\n  abbrv: string[] = monthAbbrv;\n\n  constructor() { }\n\n  // Init\n  ngOnInit() { }\n\n  // Month click event\n  clickMonth(idx: number): void {\n    if (this.stateMonthDisabled(idx)) { return; }\n    this.month = idx;\n    this.monthChange.emit(this.month);\n  }\n\n  // Month active state\n  stateMonthActive(i: number): boolean {\n    return this.dateSelected && this.dateSelected.year === this.year && this.month === i;\n  }\n\n  // Month disabled state\n  stateMonthDisabled(i: number): boolean {\n    const disabledRanges = this.options.disabledDateRanges && this.options.disabledDateRanges.filter((range) => {\n      const startDate = new Date(range[0].year, range[0].month, 1);\n      const endDate = new Date(range[1].year, range[1].month, 1);\n      const viewDate = new Date(this.year, i, 1);\n      return viewDate >= startDate && viewDate <= endDate;\n    }).length > 0;\n    const disabledIndividual = this.options.disabledDates && this.options.disabledDates.filter(date => date.year === this.year && date.month === i).length > 0;\n    return (disabledRanges || disabledIndividual);\n  }\n}\n","import { IMonthYearSelectorOptions } from './models/IMonthYearSelectorOptions';\r\nimport { IMonthYearSelectorDate } from './models/IMonthYearSelectorDate';\r\nimport { monthNames, monthAbbrv } from './lang/en.lang';\r\n\r\n// @dynamic\r\nexport class NGXMonthYear {\r\n\r\n  // Setup defaults\r\n  defaultOptions: IMonthYearSelectorOptions = {\r\n    closeOnSelect: true,\r\n    disabledDates: [],\r\n    disabledDateRanges: [],\r\n    format: 'yyyy-mm',\r\n    resetYearOnBlur: true,\r\n    yearMin: null,\r\n    yearMax: null,\r\n    yearStart: null\r\n  };\r\n\r\n  // Validate options & set defaults for any missing\r\n  setDefaultOptions(options: IMonthYearSelectorOptions): IMonthYearSelectorOptions {\r\n    // Validate options\r\n    if (options.yearStart && options.yearStart < options.yearMin) {\r\n      throw new Error('ng-month-year-selector error: yearStart must be >= yearMin');\r\n    }\r\n    if (options.yearStart && options.yearStart > options.yearMax) {\r\n      throw new Error('ng-month-year-selector error: yearStart must be <= yearMax');\r\n    }\r\n    // Apply defaults\r\n    Object.keys(this.defaultOptions).forEach(optKey => options[optKey] = options[optKey] ? options[optKey] : this.defaultOptions[optKey]);\r\n    return options;\r\n  }\r\n\r\n  formatValue(format: string, date: IMonthYearSelectorDate): string {\r\n    if (!date) { return ''; }\r\n    let returnStr = format;\r\n    returnStr = returnStr.replace('yyyy', <any>date.year);\r\n    returnStr = returnStr.replace('yy', <any>date.year.toString().slice(-2));\r\n    returnStr = returnStr.replace('mmmm', <any>monthNames[date.month]);\r\n    returnStr = returnStr.replace('mmm', <any>monthAbbrv[date.month]);\r\n    returnStr = returnStr.replace('mm', ('0' + (date.month + 1)).slice(-2));\r\n    return returnStr;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, SimpleChange, ViewChild, ElementRef } from '@angular/core';\nimport { IMonthYearSelectorOptions } from '../../models/IMonthYearSelectorOptions';\nimport { IMonthYearSelectorDate } from '../../models/IMonthYearSelectorDate';\nimport { NGXMonthYear } from '../../NGXMonthYear';\nimport { _getComponentHostLElementNode } from '@angular/core/src/render3/instructions';\n\n@Component({\n  selector: 'lib-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.sass']\n})\nexport class DropdownComponent implements OnInit, OnChanges {\n  @Input() options: IMonthYearSelectorOptions;\n  @Input() dateSelected: IMonthYearSelectorDate;\n  @Input() display: boolean;\n  @Output() selected = new EventEmitter();\n  @Output() displayChange = new EventEmitter();\n  year: number;\n  month: number;\n  openDirection: 'left' | 'right' | 'middle' = 'right';\n  @ViewChild('dropdownWrapper') dropdownWrapper: ElementRef;\n  ngxMonthYear = new NGXMonthYear();\n  offsetLeft: number;\n  dropdownReady: boolean;\n  allowClose: boolean;\n\n  constructor(private eRef: ElementRef) { }\n\n  // Init\n  ngOnInit() {\n    console.log('display', this.display);\n    this.options = this.ngxMonthYear.setDefaultOptions(this.options ? this.options : {});\n    console.log('options', this.options);\n    if (!this.dateSelected) {\n      this.month = (new Date).getMonth();\n      this.year = (new Date).getFullYear();\n    }\n  }\n\n  // Detect when click outside of dropdown component\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (!this.eRef.nativeElement.contains(event.target)) {\n      if (this.dropdownReady) {\n        this.close();\n        this.displayChange.emit(false);\n      }\n    }\n  }\n\n  // Listen for changes to @Input values\n  ngOnChanges(changes: {[propKey: string]: SimpleChange}) {\n    console.log('ngOnChanges');\n    for (const propName of Object.keys(changes)) {\n      // Clear state when dropdown is toggled\n      if (propName === 'display' && !changes.display.firstChange) {\n        if (!changes.display.currentValue) { this.onDisplayDisabled(); } else { this.onDisplayEnabled(); }\n      }\n    }\n  }\n\n  // Display enabled listener\n  onDisplayEnabled() {\n    console.log('onDisplayEnabled', this.month, this.year, this.dateSelected);\n    if (this.month === undefined || this.year === undefined) { this.clearState(); }\n    setTimeout(() => {\n      this.dropdownReady = true;\n    }, 0);\n  }\n\n  // Display disabled listener\n  onDisplayDisabled() {\n    console.log('onDisplayDisabled');\n    if (this.options.resetYearOnBlur) {\n      this.clearState();\n    }\n  }\n\n  // monthChange event listneer for month component\n  monthChange(e): void {\n    this.selected.emit({ year: this.year, month: this.month });\n    if (this.options.closeOnSelect) {\n      this.close();\n    }\n  }\n\n  // Close dropdown\n  close(): void {\n    this.display = false;\n    this.dropdownReady = false;\n  }\n\n  // Clear month/year view state\n  clearState(): void {\n    this.month = this.dateSelected ? this.dateSelected.month : (new Date).getMonth();\n    this.year = this.options.yearStart ? this.options.yearStart :\n      this.dateSelected ? this.dateSelected.year : (new Date).getFullYear();\n    console.log('clearState', this.month, this.year);\n  }\n\n}\n","import { Directive, ElementRef, OnInit, HostListener, Renderer2, Inject, ViewContainerRef, ComponentRef, OnDestroy, OnChanges, Input, Output,\n  EventEmitter, ComponentFactoryResolver, SimpleChanges } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NGXMonthYear } from './NGXMonthYear';\nimport { IMonthYearSelectorOptions } from './models/IMonthYearSelectorOptions';\nimport { IMonthYearSelectorDate } from './models/IMonthYearSelectorDate';\n\n@Directive({\n  selector: '[ngxMonthYearSelector]'\n})\nexport class MonthyearselectorDirective implements OnInit, OnDestroy, OnChanges {\n  @Input('ngxMonthYearSelector') ngxMonthYearSelector: IMonthYearSelectorOptions;\n  @Output('dateSelected') dateSelected = new EventEmitter<IMonthYearSelectorDate>();\n  componentRef: ComponentRef<DropdownComponent>;\n  subDateSelected: Subscription;\n  ngxMonthYear: NGXMonthYear = new NGXMonthYear();\n  selectedDate: IMonthYearSelectorDate;\n  viewContainerRef;\n  factoryResolver;\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document,\n    @Inject(ViewContainerRef) viewContainerRef,\n    @Inject(ComponentFactoryResolver) factoryResolver\n  ) {\n    this.viewContainerRef = viewContainerRef;\n    this.factoryResolver = factoryResolver;\n  }\n\n  ngOnInit() {\n    // add dropdown component to DOM\n    this.componentRef = this.addDynamicComponent(this.ngxMonthYearSelector ? this.ngxMonthYearSelector : {});\n    // subscribe to date selection from dropdown component\n    this.subDateSelected = this.componentRef.instance.selected.subscribe((val: IMonthYearSelectorDate) => {\n      // update input value\n      this.selectedDate = val;\n      this.updateValue();\n    });\n  }\n\n  // Listen to @Input changes\n  ngOnChanges(changes: SimpleChanges) {\n    for (const propName in changes) {\n      if (propName === 'ngxMonthYearSelector') {\n        // If options updated, update input value\n        this.updateValue();\n      }\n    }\n  }\n\n  // click event\n  @HostListener('click') onClick() {\n    this.componentRef.instance.dateSelected = this.selectedDate;\n    this.componentRef.instance.display = !this.componentRef.instance.display;\n    if (this.componentRef.instance.display) { this.componentRef.instance.onDisplayEnabled(); } else { this.componentRef.instance.onDisplayDisabled(); }\n  }\n\n  // Window resize event\n  @HostListener('window:resize', ['$event']) onResize(event) {\n    this.componentRef.instance.offsetLeft = this.el.nativeElement.offsetLeft; // readjust offset\n  }\n\n  // On input changed event\n  @HostListener('keyup') onChanged() {\n    // if not clearing value and changed, reset to proper formatting\n    if (this.el.nativeElement.value !== '' && this.el.nativeElement.value !== this.getFormattedValue()) {\n      this.updateValue();\n    }\n    // if value cleared, clear state\n    if (this.el.nativeElement.value === '') {\n      this.selectedDate = null;\n      this.componentRef.instance.clearState();\n    }\n  }\n\n  // Adds dropdown component to DOM\n  addDynamicComponent(options?: IMonthYearSelectorOptions): ComponentRef<DropdownComponent> {\n    console.log('addDynamicComponent', options);\n    // Create component\n    const factory = this.factoryResolver.resolveComponentFactory(DropdownComponent);\n    const component = factory.create(this.viewContainerRef.parentInjector);\n    // Setup component\n    if (options) { component.instance.options = options; } // set component options\n    component.instance.offsetLeft = this.el.nativeElement.offsetLeft; // adjust X offset in view\n    // Inject in DOM\n    this.viewContainerRef.insert(component.hostView);\n    return component;\n  }\n\n  // Update value with latest selected date\n  updateValue(): void {\n    this.renderer.setProperty(this.el.nativeElement, 'value', this.getFormattedValue());\n    this.el.nativeElement.dispatchEvent(new Event('input'));\n    this.dateSelected.emit(this.selectedDate);\n  }\n\n  // Get formatted date value\n  getFormattedValue(): string {\n    return this.ngxMonthYear.formatValue(this.ngxMonthYearSelector && this.ngxMonthYearSelector.format ? this.ngxMonthYearSelector.format : this.ngxMonthYear.defaultOptions.format, this.selectedDate);\n  }\n\n  ngOnDestroy() {\n    // Clean up subscriptions\n    if (this.subDateSelected) { this.subDateSelected.unsubscribe(); }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { YearComponent } from './components/dropdown/year/year.component';\nimport { MonthComponent } from './components/dropdown/month/month.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { MonthyearselectorDirective } from './monthyearselector.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    YearComponent,\n    MonthComponent,\n    DropdownComponent,\n    MonthyearselectorDirective\n  ],\n  entryComponents: [\n    DropdownComponent\n  ],\n  exports: [\n    MonthyearselectorDirective\n  ]\n})\nexport class NgxMonthYearSelectorModule { }\n"],"names":[],"mappings":"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"}
