!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/forms"),require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-month-year-selector",["exports","@angular/forms","@angular/core","@angular/common"],t):t(e["ngx-month-year-selector"]={},e.ng.forms,e.ng.core,e.ng.common)}(this,function(e,t,i,n){"use strict";var o=function(){function e(){this.yearChange=new i.EventEmitter,this.yearEditState=!1}return Object.defineProperty(e.prototype,"year",{get:function(){return this._year},set:function(e){this._year=e,this.yearChange.emit(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.yearBack=function(){this.year--,this.yearChange.emit(this.year)},e.prototype.yearForward=function(){console.log("this.options",this.options),this.year++,this.yearChange.emit(this.year)},e.prototype.yearClick=function(){var e=this;setTimeout(function(){e.yearEdit=e.year,e.yearEditState=!0,setTimeout(function(){return e.yearEditInput.nativeElement.focus()},0)})},e.prototype.yearKeyPress=function(e){13===e.keyCode&&this.yearEditInput.nativeElement.blur()},e.prototype.yearBlur=function(){console.log("yearBlur",this.yearEditValid()),this.year=this.yearEditValid()?this.yearEdit:this.year,this.yearEditState=!1,console.log("yearBLur",this.year)},e.prototype.yearEditValid=function(){var e=!this.options.yearMin||this.yearEdit>=this.options.yearMin,t=!this.options.yearMax||this.yearEdit<=this.options.yearMax;return!isNaN(this.yearEdit)&&e&&t},e.prototype.ngOnDestroy=function(){console.log("ngOnDestroy",this.yearEditState,this.yearEditValid()),this.yearEditState&&this.yearEditValid()&&(this.year=this.yearEdit)},e.decorators=[{type:i.Component,args:[{selector:"lib-year",template:'<div class="year-wrapper">\n  <div class="year-label" *ngIf="!yearEditState" (click)="yearClick()">{{ year }}</div>\n  <div class="year-edit" *ngIf="yearEditState">\n    <input type="number" [min]="options.yearMin" [max]="options.yearMax" [(ngModel)]="yearEdit" (blur)="yearBlur()" (keypress)="yearKeyPress($event)"\n     [class.year-edit--invalid]="!yearEditValid()" autocomplete="off" #yearEditInput>\n  </div>\n  <div class="year-spacer"></div>\n  <div class="year-nav" (click)="yearBack()" *ngIf="!options.yearMin || year > options.yearMin">\n    <span class="arrow arrow--left"></span>\n  </div>\n  <div class="year-nav" (click)="yearForward()" *ngIf="!options.yearMax || year < options.yearMax">\n    <span class="arrow arrow--right"></span>\n  </div>\n</div>',styles:[".year-wrapper{display:flex;align-items:center;margin:5% calc(33% / 7 - 16px)}.year-spacer{flex:1 1 auto}.year-label{position:relative;line-height:36px;padding:0 16px;font-size:14px;font-weight:500;margin:0;vertical-align:baseline;text-decoration:none;cursor:pointer}.year-nav{position:relative;width:40px;height:40px;line-height:40px;border-radius:50%;cursor:pointer}.year-nav:hover{background-color:rgba(0,0,0,.04)}.arrow{padding:0;min-width:0}.arrow.arrow--left::after,.arrow.arrow--right::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid rgba(0,0,0,.54);border-top-width:2px}.arrow.arrow--right::after{border-right-width:2px;-webkit-transform:translateX(-2px) rotate(45deg);transform:translateX(-2px) rotate(45deg)}.arrow.arrow--left::after{border-left-width:2px;-webkit-transform:translateX(2px) rotate(-45deg);transform:translateX(2px) rotate(-45deg)}.year-edit input[type=number],.year-edit input[type=number]:focus{display:inline-block;font-size:14px;width:4.5em;padding:.1em;border:1px solid #666;border-radius:3px;margin:0 16px;outline:0}.year-edit input[type=number]::-webkit-inner-spin-button,.year-edit input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.year-edit--invalid,.year-edit--invalid:focus{border:1px solid red!important;outline:0}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={options:[{type:i.Input}],year:[{type:i.Input}],yearChange:[{type:i.Output}],yearEditInput:[{type:i.ViewChild,args:["yearEditInput"]}]},e}(),r=["January","February","March","April","May","June","July","August","September","October","November","December"],a=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],s=function(){function e(){this.monthChange=new i.EventEmitter,this.abbrv=a}return e.prototype.ngOnInit=function(){},e.prototype.clickMonth=function(e){this.stateMonthDisabled(e)||(this.month=e,this.monthChange.emit(this.month))},e.prototype.stateMonthActive=function(e){return this.dateSelected&&this.dateSelected.year===this.year&&this.month===e},e.prototype.stateMonthDisabled=function(r){var i=this,e=this.options.disabledDateRanges&&0<this.options.disabledDateRanges.filter(function(e){var t=new Date(e[0].year,e[0].month,1),n=new Date(e[1].year,e[1].month,1),o=new Date(i.year,r,1);return t<=o&&o<=n}).length,t=this.options.disabledDates&&0<this.options.disabledDates.filter(function(e){return e.year===i.year&&e.month===r}).length;return e||t},e.decorators=[{type:i.Component,args:[{selector:"lib-month",template:'<div class="months-wrapper">\n  <div class="month-col" *ngFor="let month of abbrv; let i = index">\n    <div class="month-col__inner" [class.month-col__inner--selected]="stateMonthActive(i)" [class.month-col__inner--disabled]="stateMonthDisabled(i)" (click)="clickMonth(i);">\n      {{ month }}\n    </div>\n  </div>\n</div>',styles:['.months-wrapper{display:flex;flex-wrap:wrap;justify-content:space-evenly;align-items:center;font-size:1em;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"}.month-col{flex:1 0 33%;text-align:center}.month-col__inner{border-radius:999px;padding:.5em;margin:.25em;cursor:pointer;font-size:1em;text-transform:uppercase}.month-col__inner:hover{background-color:rgba(0,0,0,.04)}.month-col__inner--selected,.month-col__inner--selected:hover{background-color:#d2d1d1;color:#fff}.month-col__inner--disabled,.month-col__inner--disabled:hover{color:#d2d1d1;background-color:transparent;cursor:default}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={options:[{type:i.Input}],dateSelected:[{type:i.Input}],year:[{type:i.Input}],month:[{type:i.Input}],monthChange:[{type:i.Output}]},e}();var l=function(){function e(){this.defaultOptions={closeOnSelect:!0,disabledDates:[],disabledDateRanges:[],format:"yyyy-mm",resetYearOnBlur:!0,yearMin:null,yearMax:null,yearStart:null}}return e.prototype.setDefaultOptions=function(t){var n=this;if(t.yearStart&&t.yearStart<t.yearMin)throw new Error("ng-month-year-selector error: yearStart must be >= yearMin");if(t.yearStart&&t.yearStart>t.yearMax)throw new Error("ng-month-year-selector error: yearStart must be <= yearMax");return Object.keys(this.defaultOptions).forEach(function(e){return t[e]=t[e]?t[e]:n.defaultOptions[e]}),t},e.prototype.formatValue=function(e,t){if(!t)return"";var n=e;return n=(n=(n=(n=(n=n.replace("yyyy",t.year)).replace("yy",t.year.toString().slice(-2))).replace("mmmm",r[t.month])).replace("mmm",a[t.month])).replace("mm",("0"+(t.month+1)).slice(-2))},e}(),p=function(){function e(e){this.eRef=e,this.selected=new i.EventEmitter,this.displayChange=new i.EventEmitter,this.openDirection="right",this.ngxMonthYear=new l}return e.prototype.ngOnInit=function(){console.log("display",this.display),this.options=this.ngxMonthYear.setDefaultOptions(this.options?this.options:{}),console.log("options",this.options),this.dateSelected||(this.month=(new Date).getMonth(),this.year=(new Date).getFullYear())},e.prototype.clickout=function(e){this.eRef.nativeElement.contains(e.target)||this.dropdownReady&&(this.close(),this.displayChange.emit(!1))},e.prototype.ngOnChanges=function(e){var t,n;console.log("ngOnChanges");try{for(var o=function i(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}(Object.keys(e)),r=o.next();!r.done;r=o.next()){"display"!==r.value||e.display.firstChange||(e.display.currentValue?this.onDisplayEnabled():this.onDisplayDisabled())}}catch(a){t={error:a}}finally{try{r&&!r.done&&(n=o["return"])&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.onDisplayEnabled=function(){var e=this;console.log("onDisplayEnabled",this.month,this.year,this.dateSelected),this.month!==undefined&&this.year!==undefined||this.clearState(),setTimeout(function(){e.dropdownReady=!0},0)},e.prototype.onDisplayDisabled=function(){console.log("onDisplayDisabled"),this.options.resetYearOnBlur&&this.clearState()},e.prototype.monthChange=function(e){this.selected.emit({year:this.year,month:this.month}),this.options.closeOnSelect&&this.close()},e.prototype.close=function(){this.display=!1,this.dropdownReady=!1},e.prototype.clearState=function(){this.month=this.dateSelected?this.dateSelected.month:(new Date).getMonth(),this.year=this.options.yearStart?this.options.yearStart:this.dateSelected?this.dateSelected.year:(new Date).getFullYear(),console.log("clearState",this.month,this.year)},e.decorators=[{type:i.Component,args:[{selector:"lib-dropdown",template:'<div #dropdownWrapper class="dropdown-wrapper" \n  [class.dropdown-wrapper--open-left]="openDirection == \'left\'" \n  [class.dropdown-wrapper--open-middle]="openDirection == \'middle\'" \n  [style.left]="offsetLeft ? offsetLeft + \'px\' : null"\n  *ngIf="display">\n  <lib-year [options]="options" [(year)]="year"></lib-year>\n  <div class="dropdown-divider"></div>\n  <lib-month [options]="options" [dateSelected]="dateSelected" [(month)]="month" [year]="year" (monthChange)="monthChange($event)"></lib-month>\n</div>',styles:['.dropdown-wrapper{position:absolute;box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12);background-color:#fff;padding:.5em;width:300px;margin-top:9px;font-size:1rem;z-index:999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;font-family:-apple-system,vBlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"}.dropdown-divider{border-top:1px solid rgba(0,0,0,.12);margin-bottom:10px}@media (max-width:575.98px){.dropdown-wrapper{left:0!important;width:100%}}']}]}],e.ctorParameters=function(){return[{type:i.ElementRef}]},e.propDecorators={options:[{type:i.Input}],dateSelected:[{type:i.Input}],display:[{type:i.Input}],selected:[{type:i.Output}],displayChange:[{type:i.Output}],dropdownWrapper:[{type:i.ViewChild,args:["dropdownWrapper"]}],clickout:[{type:i.HostListener,args:["document:click",["$event"]]}]},e}(),c=function(){function e(e,t,n,o,r){this.el=e,this.renderer=t,this.document=n,this.dateSelected=new i.EventEmitter,this.ngxMonthYear=new l,this.viewContainerRef=o,this.factoryResolver=r}return e.prototype.ngOnInit=function(){var t=this;this.componentRef=this.addDynamicComponent(this.ngxMonthYearSelector?this.ngxMonthYearSelector:{}),this.subDateSelected=this.componentRef.instance.selected.subscribe(function(e){t.selectedDate=e,t.updateValue()})},e.prototype.ngOnChanges=function(e){for(var t in e)"ngxMonthYearSelector"===t&&this.updateValue()},e.prototype.onClick=function(){this.componentRef.instance.dateSelected=this.selectedDate,this.componentRef.instance.display=!this.componentRef.instance.display,this.componentRef.instance.display?this.componentRef.instance.onDisplayEnabled():this.componentRef.instance.onDisplayDisabled()},e.prototype.onResize=function(e){this.componentRef.instance.offsetLeft=this.el.nativeElement.offsetLeft},e.prototype.onChanged=function(){""!==this.el.nativeElement.value&&this.el.nativeElement.value!==this.getFormattedValue()&&this.updateValue(),""===this.el.nativeElement.value&&(this.selectedDate=null,this.componentRef.instance.clearState())},e.prototype.addDynamicComponent=function(e){console.log("addDynamicComponent",e);var t=this.factoryResolver.resolveComponentFactory(p).create(this.viewContainerRef.parentInjector);return e&&(t.instance.options=e),t.instance.offsetLeft=this.el.nativeElement.offsetLeft,this.viewContainerRef.insert(t.hostView),t},e.prototype.updateValue=function(){this.renderer.setProperty(this.el.nativeElement,"value",this.getFormattedValue()),this.el.nativeElement.dispatchEvent(new Event("input")),this.dateSelected.emit(this.selectedDate)},e.prototype.getFormattedValue=function(){return this.ngxMonthYear.formatValue(this.ngxMonthYearSelector&&this.ngxMonthYearSelector.format?this.ngxMonthYearSelector.format:this.ngxMonthYear.defaultOptions.format,this.selectedDate)},e.prototype.ngOnDestroy=function(){this.subDateSelected&&this.subDateSelected.unsubscribe()},e.decorators=[{type:i.Directive,args:[{selector:"[ngxMonthYearSelector]"}]}],e.ctorParameters=function(){return[{type:i.ElementRef},{type:i.Renderer2},{type:undefined,decorators:[{type:i.Inject,args:[n.DOCUMENT]}]},{type:undefined,decorators:[{type:i.Inject,args:[i.ViewContainerRef]}]},{type:undefined,decorators:[{type:i.Inject,args:[i.ComponentFactoryResolver]}]}]},e.propDecorators={ngxMonthYearSelector:[{type:i.Input,args:["ngxMonthYearSelector"]}],dateSelected:[{type:i.Output,args:["dateSelected"]}],onClick:[{type:i.HostListener,args:["click"]}],onResize:[{type:i.HostListener,args:["window:resize",["$event"]]}],onChanged:[{type:i.HostListener,args:["keyup"]}]},e}(),d=function(){function e(){}return e.decorators=[{type:i.NgModule,args:[{imports:[n.CommonModule,t.FormsModule],declarations:[o,s,p,c],entryComponents:[p],exports:[c]}]}],e}();e.NgxMonthYearSelectorModule=d,e.ɵc=p,e.ɵb=s,e.ɵa=o,e.ɵd=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-month-year-selector.umd.min.js.map